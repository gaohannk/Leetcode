--Table: Spending
--
--+-------------+---------+
--| Column Name | Type    |
--+-------------+---------+
--| user_id     | int     |
--| spend_date  | date    |
--| platform    | enum    |
--| amount      | int     |
--+-------------+---------+
--The table logs the spendings history of users that make purchases from an online shopping website which has a desktop and a mobile application.
--(user_id, spend_date, platform) is the primary key of this table.
--The platform column is an ENUM type of ('desktop', 'mobile').
--Write an SQL query to find the total number of users and the total amount spent using mobile only, desktop only and both mobile and desktop together for each date.
--
--The query result format is in the following example:
--
--Spending table:
--+---------+------------+----------+--------+
--| user_id | spend_date | platform | amount |
--+---------+------------+----------+--------+
--| 1       | 2019-07-01 | mobile   | 100    |
--| 1       | 2019-07-01 | desktop  | 100    |
--| 2       | 2019-07-01 | mobile   | 100    |
--| 2       | 2019-07-02 | mobile   | 100    |
--| 3       | 2019-07-01 | desktop  | 100    |
--| 3       | 2019-07-02 | desktop  | 100    |
--+---------+------------+----------+--------+
--
--Result table:
--+------------+----------+--------------+-------------+
--| spend_date | platform | total_amount | total_users |
--+------------+----------+--------------+-------------+
--| 2019-07-01 | desktop  | 100          | 1           |
--| 2019-07-01 | mobile   | 100          | 1           |
--| 2019-07-01 | both     | 200          | 1           |
--| 2019-07-02 | desktop  | 100          | 1           |
--| 2019-07-02 | mobile   | 100          | 1           |
--| 2019-07-02 | both     | 0            | 0           |
--+------------+----------+--------------+-------------+
--On 2019-07-01, user 1 purchased using both desktop and mobile, user 2 purchased using mobile only and user 3 purchased using desktop only.
--On 2019-07-02, user 2 purchased using mobile only, user 3 purchased using desktop only and no one purchased using both platforms.

SELECT d.spend_date, d.platform,
    (case when SUM(st.total_amount) is null then 0 else SUM(st.total_amount) end) as total_amount,
    (case when count(st.user_id) is null then 0 else count(st.user_id) end) as total_users
FROM
(
    SELECT DISTINCT spend_date, 'desktop' as platform FROM Spending
    UNION
    SELECT DISTINCT spend_date , 'mobile' as platform FROM Spending
    UNION
    SELECT DISTINCT spend_date , 'both' as platform FROM Spending
) d left JOIN
(
    SELECT user_id, spend_date,
           (CASE WHEN COUNT(DISTINCT platform) = 1 THEN MIN(platform) ELSE 'both' END) as platform,
            SUM(amount) as total_amount
    FROM Spending
    GROUP BY user_id, spend_date
) st
ON  d.spend_date = st.spend_date and d.platform = st.platform
group by d.spend_date, d.platform